AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: Photo Album Lambda
Resources:
  ApiGatewayApi:
    Type: AWS::Serverless::Api
    Properties:
      OpenApiVersion: "3.0.1"
      StageName: dev2
      DefinitionUri: ai-photo-search-oas30-apigateway.yaml
  PhotoS3Bucket:
    Type: 'AWS::S3::Bucket'
    DeletionPolicy: Retain
    Properties:
      AccessControl: PublicRead
      BucketName: photos-6998-hw2
      CorsConfiguration:
        CorsRules:
          - AllowedHeaders:
              - '*'
            AllowedMethods:
              - GET
            AllowedOrigins:
              - '*'
            ExposedHeaders:
              - Date
            Id: myCORSRuleId1
  IndexPhotosLambda:
    Type: 'AWS::Serverless::Function'
    Properties:
      FunctionName: hw2-index-photos
      Handler: index-photos.lambda_handler
      Runtime: python3.9
      CodeUri: ./index-photos.py
      Description: 'index-photos Lambda function for Photo Album'
      MemorySize: 128
      Timeout: 30
      Role: 'arn:aws:iam::261903827858:role/service-role/6998hw2-LF1-role-2qrhedw9'
      Events:
        UploadPhoto:
          Type: S3
          Properties:
            Bucket:
              Ref: PhotoS3Bucket
            Events: s3:ObjectCreated:*
      Environment:
        Variables:
          REGION: us-east-1
  SearchPhotosLambda:
    Type: 'AWS::Serverless::Function'
    Properties:
      FunctionName: hw2-search-photos
      Handler: search-photos.lambda_handler
      Runtime: python3.9
      CodeUri: ./search-photos.py
      Description: 'search-photos Lambda function for Photo Album'
      MemorySize: 128
      Timeout: 30
      Role: 'arn:aws:iam::261903827858:role/service-role/search-photos-role-bfdiy8sg'
      Events:
        ApiGetEvent:
          Type: Api
          Properties:
            Method: get
            Path: /search
            RestApiId: 
              Ref: ApiGatewayApi
      Environment:
        Variables:
          REGION: us-east-1